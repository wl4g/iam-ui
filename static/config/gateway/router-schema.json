{
  "errcode": 200,
  "errmsg": "ok",
  "timestamp": 1652235124000,
  "requestId": "0000000000000000",
  "data": {
    "gateway_routes_schema": {
      "version": "3.0.0-RC3",
      "predicates": [
        {
          "type": "Path",
          "help": "",
          "repeat": "true",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "StripPrefix",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "int",
            "regex": "(^[\\d]+)",
            "help": ""
          }
        },
        {
          "type": "Query",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Before",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "After",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Between",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Cookie",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Header",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Host",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "Method",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(^/[\\S_-]+)(^,/[\\S_-]+)*",
            "help": ""
          }
        },
        {
          "type": "RemoteAddr",
          "help": "",
          "repeat": "false",
          "value": {
            "type": "string",
            "regex": "(1\\d{2}|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)$",
            "help": ""
          }
        }
      ],
      "filters": [
        {
          "type": "SimpleSignAuthing",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "appIdExtractor",
              "type": "enum",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "Parameter",
              "help": "",
              "options": [
                {
                  "name": "Parameter",
                  "help": {
                    "zh_CN": "",
                    "en_US": ""
                  }
                },
                {
                  "name": "RouteId",
                  "help": ""
                }
              ]
            },
            {
              "name": "appIdParam",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "appId",
              "help": ""
            },
            {
              "name": "secretParam",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "appSecret",
              "help": ""
            },
            {
              "name": "signReplayVerifyEnabled",
              "type": "boolean",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "true",
              "help": ""
            },
            {
              "name": "signReplayVerifyBloomExpireSeconds",
              "type": "int",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "604800",
              "help": ""
            },
            {
              "name": "signParam",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "sign",
              "help": ""
            },
            {
              "name": "signAlgorithm",
              "type": "enum",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "Parameter",
              "help": "",
              "options": [
                {
                  "name": "MD5",
                  "help": ""
                },
                {
                  "name": "S1",
                  "help": ""
                },
                {
                  "name": "S256",
                  "help": ""
                },
                {
                  "name": "S384",
                  "help": ""
                },
                {
                  "name": "S512",
                  "help": ""
                },
                {
                  "name": "HMD5",
                  "help": ""
                },
                {
                  "name": "HS1",
                  "help": ""
                },
                {
                  "name": "HS256",
                  "help": ""
                },
                {
                  "name": "HS512",
                  "help": ""
                }
              ]
            },
            {
              "name": "signHashingMode",
              "type": "enum",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "UriParamsKeySortedHashing",
              "help": "",
              "options": [
                {
                  "name": "UriParamsKeySortedHashing",
                  "help": ""
                },
                {
                  "name": "SimpleParamsBytesSortedHashing",
                  "help": ""
                }
              ]
            },
            {
              "name": "signHashingIncludeParams",
              "type": "array",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "signHashingExcludeParams",
              "type": "array",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "signHashingRequiredIncludeParams",
              "type": "array",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "addSignAuthClientIdHeader",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "X-Sign-Auth-AppId",
              "help": ""
            }
          ]
        },
        {
          "type": "IamRequestSize",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "maxBodySize",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "5MB",
              "help": ""
            }
          ]
        },
        {
          "type": "IamRequestLimiter",
          "repeat": "true",
          "help": "",
          "args": [
            {
              "name": "emptyKeyStatus",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "FORBIDDEN",
              "help": ""
            },
            {
              "name": "statusCode",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "TOO_MANY_REQUESTS",
              "help": ""
            },
            {
              "name": "keyResolver",
              "type": "object",
              "multi": "false",
              "repeat": "false",
              "help": "The available options are: (RedisQuotaLimiter|RedisRateLimiter)",
              "defaultValue": "",
              "options": [],
              "childrens": [
                {
                  "name": "provider",
                  "type": "enum",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "Host",
                  "help": "",
                  "options": [
                    {
                      "name": "Host",
                      "help": ""
                    },
                    {
                      "name": "Header",
                      "help": ""
                    },
                    {
                      "name": "Path",
                      "help": ""
                    },
                    {
                      "name": "Principal",
                      "help": ""
                    },
                    {
                      "name": "Interval",
                      "help": ""
                    }
                  ]
                },
                {
                  "name": "properties",
                  "type": "map",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "500",
                  "help": "",
                  "options": [],
                  "childrens": [
                    {
                      "name": "headerNames",
                      "type": "array",
                      "repeat": "false",
                      "defaultValue": "['X-Forwarded-For','Proxy-Client-IP','WL-Proxy-Client-IP']",
                      "help": "",
                      "options": [],
                      "childrens": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "provider",
              "type": "enum",
              "multi": "false",
              "repeat": "false",
              "defaultValue": "RedisRateLimiter",
              "help": "The request limiter provider",
              "options": [
                {
                  "name": "RedisRateLimiter",
                  "help": ""
                },
                {
                  "name": "RedisQuotaLimiter",
                  "help": ""
                }
              ]
            }
          ]
        },
        {
          "type": "IamCircuitBreaker",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "name",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "fallbackUri",
              "type": "string",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "statusCodes",
              "type": "array",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "CanaryLoadBalancer",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "choose",
              "type": "object",
              "multi": "false",
              "repeat": "false",
              "childrens": [
                {
                  "name": "loadBalancerAlgorithm",
                  "type": "enum",
                  "repeat": "false",
                  "defaultValue": null,
                  "help": "",
                  "options": [
                    {
                      "name": "R",
                      "help": ""
                    },
                    {
                      "name": "RR",
                      "help": ""
                    },
                    {
                      "name": "WR",
                      "help": ""
                    },
                    {
                      "name": "WRR",
                      "help": ""
                    },
                    {
                      "name": "DH",
                      "help": ""
                    },
                    {
                      "name": "SH",
                      "help": ""
                    },
                    {
                      "name": "LC",
                      "help": ""
                    },
                    {
                      "name": "LT",
                      "help": ""
                    },
                    {
                      "name": "WLC",
                      "help": ""
                    },
                    {
                      "name": "WLT",
                      "help": ""
                    }
                  ]
                }
              ],
              "help": ""
            }
          ]
        },
        {
          "type": "IamRetry",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "retries",
              "type": "int",
              "multi": "false",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            },
            {
              "name": "statuses",
              "type": "array",
              "multi": "true",
              "repeat": "false",
              "defaultValue": [
                "BAD_GATEWAY",
                "SERVICE_UNAVAILABLE",
                "GATEWAY_TIMEOUT"
              ],
              "options": [
                {
                  "name": "BAD_GATEWAY",
                  "help": ""
                },
                {
                  "name": "SERVICE_UNAVAILABLE",
                  "help": ""
                },
                {
                  "name": "GATEWAY_TIMEOUT",
                  "help": ""
                }
              ],
              "help": ""
            },
            {
              "name": "backoff",
              "type": "object",
              "multi": "false",
              "repeat": "false",
              "childrens": [
                {
                  "name": "firstBackoff",
                  "type": "int",
                  "repeat": "false",
                  "defaultValue": "100",
                  "help": ""
                },
                {
                  "name": "maxBackoff",
                  "type": "int",
                  "repeat": "false",
                  "defaultValue": "500",
                  "help": ""
                },
                {
                  "name": "factor",
                  "type": "int",
                  "repeat": "false",
                  "defaultValue": "2",
                  "help": ""
                },
                {
                  "name": "basedOnPreviousValue",
                  "type": "boolean",
                  "repeat": "false",
                  "defaultValue": "false",
                  "help": ""
                }
              ],
              "help": ""
            }
          ]
        },
        {
          "type": "RemoveRequestHeader",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "RemoveRequestHeader",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "RemoveResponseHeader",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "RemoveResponseHeader",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "RewritePath",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "RewritePath",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "SetResponseHeader",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "SetResponseHeader",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "SetStatus",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "SetStatus",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "RedirectTo",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "RedirectTo",
              "type": "stringWithNamedConfig",
              "repeat": "false",
              "defaultValue": null,
              "help": ""
            }
          ]
        },
        {
          "type": "SecureHeaders",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "xssProtectionHeader",
              "type": "string",
              "repeat": "false",
              "defaultValue": "X-Xss-Protection:1; mode=block",
              "help": ""
            },
            {
              "name": "strictTransportSecurity",
              "type": "string",
              "repeat": "false",
              "defaultValue": "Strict-Transport-Security:max-age=631138519",
              "help": ""
            },
            {
              "name": "frameOptions",
              "type": "string",
              "repeat": "false",
              "defaultValue": "DENY",
              "help": ""
            },
            {
              "name": "contentTypeOptions",
              "type": "string",
              "repeat": "false",
              "defaultValue": "nosniff",
              "help": ""
            },
            {
              "name": "referrerPolicy",
              "type": "string",
              "repeat": "false",
              "defaultValue": "no-referrer",
              "help": ""
            },
            {
              "name": "contentSecurityPolicy",
              "type": "string",
              "repeat": "false",
              "defaultValue": "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src https:; style-src 'self' https: 'unsafe-inline'",
              "help": ""
            },
            {
              "name": "downloadOptions",
              "type": "string",
              "repeat": "false",
              "defaultValue": "noopen",
              "help": ""
            },
            {
              "name": "permittedCrossDomainPolicies",
              "type": "string",
              "repeat": "false",
              "defaultValue": "none",
              "help": ""
            }
          ]
        },
        {
          "name": "IpFilter",
          "repeat": "false",
          "help": "",
          "args": [
            {
              "name": "preferRejectOnCidrConflict",
              "type": "boolean",
              "repeat": "false",
              "multi": "false",
              "defaultValue": "true",
              "help": "When the white-list (allow) and the CIDR of the black-list (deny) conflict, whether the black-list (deny) has a higher priority."
            },
            {
              "name": "acceptNotMatchCidr",
              "type": "boolean",
              "repeat": "false",
              "multi": "false",
              "defaultValue": "true",
              "help": "The accept the request when neither the whitelist nor the blacklist match."
            },
            {
              "name": "anyLocalAddressAllowed",
              "type": "boolean",
              "repeat": "false",
              "multi": "false",
              "defaultValue": "true",
              "help": "The allow all local addresses to pass."
            },
            {
              "name": "statusCode",
              "type": "string",
              "repeat": "false",
              "multi": "false",
              "defaultValue": "FORBIDDEN"
            },
            {
              "name": "forwardHeaderNames",
              "type": "array",
              "repeat": "false",
              "multi": "true",
              "help": "",
              "defaultValue": [
                "X-Forwarded-For",
                "Proxy-Client-IP",
                "WL-Proxy-Client-IP"
              ],
              "options": [
                {
                  "name": "X-Forwarded-For",
                  "help": ""
                },
                {
                  "name": "Proxy-Client-IP",
                  "help": ""
                },
                {
                  "name": "WL-Proxy-Client-IP",
                  "help": ""
                },
                {
                  "name": "X-Real-IP",
                  "help": ""
                },
                {
                  "name": "REMOTE_ADDR",
                  "help": ""
                },
                {
                  "name": "Remote-Addr",
                  "help": ""
                },
                {
                  "name": "RemoteAddr",
                  "help": ""
                },
                {
                  "name": "REMOTE_IP",
                  "help": ""
                },
                {
                  "name": "Remote-Ip",
                  "help": ""
                },
                {
                  "name": "RemoteIp",
                  "help": ""
                },
                {
                  "name": "HTTP_X_FORWARDED_FOR",
                  "help": ""
                },
                {
                  "name": "Http-X-Forwarded-For",
                  "help": ""
                },
                {
                  "name": "HttpXForwardedFor",
                  "help": ""
                },
                {
                  "name": "HTTP_X_FORWARDED",
                  "help": ""
                },
                {
                  "name": "Http-X-Forwarded",
                  "help": ""
                },
                {
                  "name": "HttpXForwarded",
                  "help": ""
                },
                {
                  "name": "HTTP_Client_IP",
                  "help": ""
                },
                {
                  "name": "Http-Client-Ip",
                  "help": ""
                },
                {
                  "name": "HttpClientIp",
                  "help": ""
                },
                {
                  "name": "HTTP_X_CLUSTER_CLIENT_IP",
                  "help": ""
                },
                {
                  "name": "Http-X-Cluster-Client-Ip",
                  "help": ""
                },
                {
                  "name": "HttpXClusterClientIp",
                  "help": ""
                },
                {
                  "name": "HTTP_FORWARDED_FOR",
                  "help": ""
                },
                {
                  "name": "Http-Forwarded-For",
                  "help": ""
                },
                {
                  "name": "HttpForwardedFor",
                  "help": ""
                },
                {
                  "name": "HTTP_VIA",
                  "help": ""
                },
                {
                  "name": "Http-Via",
                  "help": ""
                },
                {
                  "name": "HttpVia",
                  "help": ""
                }
              ]
            },
            {
              "name": "subnets",
              "type": "array",
              "repeat": "false",
              "multi": "false",
              "help": "",
              "childrens": [
                {
                  "name": "allow",
                  "type": "boolean",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "false",
                  "help": "The allow or deny IP subnet segments."
                },
                {
                  "name": "cidrs",
                  "type": "array",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": [],
                  "help": "The matching subnet CIDRs"
                }
              ]
            }
          ]
        },
        {
          "name": "FaultInjector",
          "repeat": "false",
          "multi": "false",
          "help": "",
          "args": [
            {
              "name": "provider",
              "type": "enum",
              "repeat": "false",
              "multi": "false",
              "help": "The which is equivalent to another and condition after match the SPEL expression.",
              "options": [
                {
                  "name": "Abort",
                  "help": ""
                },
                {
                  "name": "FixedDelay",
                  "help": ""
                },
                {
                  "name": "RangeDelay",
                  "help": ""
                }
              ]
            },
            {
              "name": "abort",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "The request to abort fault injector configuration.",
              "childrens": [
                {
                  "name": "percentage",
                  "type": "double",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "1.00",
                  "help": "The percentage of requests that require fault injection match enabled."
                },
                {
                  "name": "statusCode",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "500",
                  "help": "The HttpStatus returned when the fault strategy is meet."
                }
              ]
            },
            {
              "name": "fixedDelay",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "The request to fixed delay fault injector configuration.",
              "childrens": [
                {
                  "name": "percentage",
                  "type": "double",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "1.00",
                  "help": "The percentage of requests that require fault injection match enabled."
                },
                {
                  "name": "delayMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "1000",
                  "help": "fixed delay in milliseconds"
                }
              ]
            },
            {
              "name": "rangeDelay",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "The request to random range delay fault injector configuration.",
              "childrens": [
                {
                  "name": "percentage",
                  "type": "double",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "1.00",
                  "help": "The percentage of requests that require fault injection match enabled."
                },
                {
                  "name": "minDelayMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "1000",
                  "help": "fixed delay in milliseconds"
                },
                {
                  "name": "maxDelayMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "5000",
                  "help": "fixed delay in milliseconds"
                }
              ]
            }
          ]
        },
        {
          "name": "ResponseCache",
          "repeat": "false",
          "multi": "false",
          "help": "",
          "args": [
            {
              "name": "provider",
              "type": "enum",
              "repeat": "false",
              "multi": "false",
              "help": "",
              "options": [
                {
                  "name": "SimpleCache",
                  "help": ""
                },
                {
                  "name": "EhCache",
                  "help": ""
                },
                {
                  "name": "RedisCache",
                  "help": ""
                }
              ]
            },
            {
              "name": "simple",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "",
              "childrens": [
                {
                  "name": "maximumSize",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "100_000",
                  "help": ""
                },
                {
                  "name": "expireAfterAccessMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "60_000",
                  "help": ""
                },
                {
                  "name": "expireAfterWriteMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "600_000",
                  "help": ""
                },
                {
                  "name": "concurrencyLevel",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "4",
                  "help": ""
                }
              ]
            },
            {
              "name": "ehcache",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "",
              "childrens": [
                {
                  "name": "eliminationAlg",
                  "type": "enum",
                  "repeat": "false",
                  "multi": "false",
                  "defaultValue": "LRU",
                  "help": "The cached data elimination algorithm.",
                  "options": [
                    {
                      "name": "LFU",
                      "help": "Least Frequently Used"
                    },
                    {
                      "name": "LRU",
                      "help": ""
                    },
                    {
                      "name": "FIFO",
                      "help": ""
                    }
                  ]
                },
                {
                  "name": "cacheNamePrefix",
                  "type": "string",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "ResponseCache",
                  "help": ""
                },
                {
                  "name": "offHeapEntries",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "100_000",
                  "help": ""
                },
                {
                  "name": "offHeapSize",
                  "type": "string",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "128MB",
                  "help": "The number of data size not persisted to keep in memory. must be less than diskSize"
                },
                {
                  "name": "diskSize",
                  "type": "string",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "512MB",
                  "help": "The number of total data size not persisted to keep in disk. must be greater than offHeapSize"
                }
              ]
            },
            {
              "name": "redis",
              "type": "object",
              "repeat": "false",
              "multi": "false",
              "help": "",
              "childrens": [
                {
                  "name": "cachePrefix",
                  "type": "string",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "iam:gateway:responsecache:data",
                  "help": ""
                },
                {
                  "name": "expireMs",
                  "type": "int",
                  "multi": "false",
                  "repeat": "false",
                  "defaultValue": "60000",
                  "help": ""
                }
              ]
            }
          ]
        }
      ]
    }
  }
}
